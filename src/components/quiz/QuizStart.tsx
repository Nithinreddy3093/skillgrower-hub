
import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { BrainCircuit, Loader2, Trophy, AlertTriangle } from "lucide-react";
import { Progress } from "@/components/ui/progress";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { QuestionDifficulty } from "./types";
import { toast } from "sonner";

interface TopicOption {
  id: string;
  name: string;
}

interface QuizStartProps {
  topicOptions: TopicOption[];
  selectedTopic: string;
  setSelectedTopic: (topic: string) => void;
  difficulty: QuestionDifficulty;
  changeDifficulty: (difficulty: QuestionDifficulty) => void;
  startQuiz: () => void;
  isGeneratingQuestions: boolean;
  generationProgress: number;
  generationError: string | null;
  setGenerationError: (error: string | null) => void;
  useBackupQuestions: boolean;
  handleRetry: () => void;
}

export function QuizStart({
  topicOptions,
  selectedTopic,
  setSelectedTopic,
  difficulty,
  changeDifficulty,
  startQuiz,
  isGeneratingQuestions,
  generationProgress,
  generationError,
  setGenerationError,
  useBackupQuestions,
  handleRetry
}: QuizStartProps) {
  return (
    <div className="max-w-7xl mx-auto pt-24 px-4">
      <Card className="w-full max-w-3xl mx-auto border border-gray-200 dark:border-gray-700 shadow-lg">
        <CardHeader className="text-center">
          <div className="mx-auto p-3 bg-gradient-to-br from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 rounded-full w-16 h-16 flex items-center justify-center mb-4">
            <BrainCircuit className="h-8 w-8 text-indigo-600 dark:text-indigo-300" />
          </div>
          <CardTitle className="text-2xl md:text-3xl">AI-Generated Quiz</CardTitle>
          <p className="text-gray-500 dark:text-gray-400 mt-2">
            Test your knowledge with personalized questions generated by our AI assistant
          </p>
        </CardHeader>
        <CardContent className="space-y-6">
          {generationError && (
            <Alert variant="destructive" className="mb-4">
              <AlertTriangle className="h-4 w-4" />
              <AlertDescription>
                {generationError}
                <Button 
                  variant="outline" 
                  size="sm" 
                  onClick={() => setGenerationError(null)} 
                  className="ml-2"
                >
                  Dismiss
                </Button>
              </AlertDescription>
            </Alert>
          )}
          
          <div>
            <label className="text-sm font-medium mb-2 block">Select Topic</label>
            <Select value={selectedTopic} onValueChange={setSelectedTopic}>
              <SelectTrigger className="w-full">
                <SelectValue placeholder="Choose a topic" />
              </SelectTrigger>
              <SelectContent>
                {topicOptions.map(topic => (
                  <SelectItem key={topic.id} value={topic.id}>{topic.name}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
          
          <div>
            <label className="text-sm font-medium mb-2 block">Difficulty Level</label>
            <div className="flex gap-2 flex-wrap">
              {["easy", "intermediate", "advanced"].map((diff) => (
                <Button
                  key={diff}
                  variant={difficulty === diff ? "default" : "outline"}
                  onClick={() => changeDifficulty(diff as QuestionDifficulty)}
                  className="flex-1"
                >
                  {diff.charAt(0).toUpperCase() + diff.slice(1)}
                </Button>
              ))}
            </div>
          </div>
          
          <div className="pt-4">
            <Button 
              onClick={startQuiz}
              disabled={isGeneratingQuestions}
              className="w-full"
              size="lg"
            >
              {isGeneratingQuestions ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  Generating Questions...
                </>
              ) : (
                <>
                  <Trophy className="mr-2 h-5 w-5" />
                  Start Quiz
                </>
              )}
            </Button>
            
            {isGeneratingQuestions && (
              <div className="mt-4">
                <Progress value={generationProgress} className="h-2" />
                <p className="text-xs text-center mt-1 text-gray-500">
                  {generationProgress}% - Generating your personalized quiz questions
                </p>
              </div>
            )}
            
            {useBackupQuestions ? (
              <div className="mt-3 flex justify-center">
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={handleRetry}
                  className="text-xs"
                >
                  Try AI generation again
                </Button>
              </div>
            ) : (
              <p className="text-xs text-center mt-3 text-gray-500 dark:text-gray-400">
                Our AI will generate 5 questions based on your selected topic
              </p>
            )}
          </div>
          
          <div className="bg-indigo-50 dark:bg-indigo-900/20 p-4 rounded-lg">
            <h3 className="font-medium text-sm mb-2 text-indigo-700 dark:text-indigo-300">
              Topic Information: {topicOptions.find(t => t.id === selectedTopic)?.name}
            </h3>
            <p className="text-xs text-gray-600 dark:text-gray-400">
              You'll receive university-level questions on this topic. Questions will be tailored to your selected difficulty level.
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
